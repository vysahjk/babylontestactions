{
  "commoncomponents": {
    "button": {
      "login": {
        "dev": {
          "account": {
            "login": "Sign in with Dev mode"
          }
        },
        "regular": {
          "login": "Sign In"
        }
      },
      "run": {
        "protocol": {
          "text": "Run protocol"
        },
        "scenario": {
          "text": "Run scenario"
        }
      },
      "change": {
        "language": "Change language"
      },
      "create": {
        "scenario": {
          "label": "Create",
          "tooltip": {
            "disabled": "Please save or discard current modifications before creating a new scenario"
          }
        }
      },
      "scenario": {
        "parameters": {
          "disabledEditTooltip": {
            "running": "Parameters cannot be edited while the scenario is running",
            "rejected": "This scenario is rejected, you cannot edit its parameters",
            "validated": "This scenario is validated, you cannot edit its parameters",
            "noTabs": "No parameters to edit"
          },
          "discard": "Discard modifications",
          "edit": "Edit parameters",
          "launch": "Launch scenario",
          "update": {
            "launch": "Update and launch scenario"
          }
        }
      }
    },
    "card": {
      "protocol": {
        "parameters": {
          "text": {
            "driver": {
              "name": "Driver name"
            },
            "population": {
              "size": "Population size"
            },
            "total": {
              "simulations": "Total simulations"
            }
          },
          "title": {
            "protocol": {
              "parameters": "Protocol parameters"
            }
          }
        }
      },
      "simulation": {
        "parameters": {
          "text": {
            "alert": {
              "simulation": {
                "launched": "Simulation successfully launched"
              }
            },
            "engine": {
              "name": "Engine name"
            },
            "simulation": {
              "name": "Simulation name"
            }
          },
          "title": {
            "simulation": {
              "parameters": "Engine parameters"
            }
          }
        }
      }
    },
    "cytoviz": {
      "elementDetails": "Details",
      "loading": "Loading...",
      "noSelectedElement": "Select a node or edge to show its data",
      "settings": {
        "compactMode": "Compact layout",
        "layout": "Layout",
        "title": "Settings",
        "spacingFactor": "Spacing factor",
        "zoomLimits": "Min & max zoom",
        "opensettings": "Open settings",
        "closesettings": "Close settings",
        "showStats": "Cytoscape statistics"
      },
      "elementData": {
        "dictKey": "Key",
        "dictValue": "Value",
        "noData": "No data to display for this element.",
        "attributes": {
          "PlantName": "Plant"
        }
      },
      "accordion": {
        "nodeDetails": "Node details",
        "findNode": {
          "headline": "Find a node",
          "searchByID": "Search by ID"
        },
        "exploreGraph": {
          "headline": "Explore a subgraph",
          "startingNodes": "Select the starting node(s)",
          "startingNodesError": "Select at least one node",
          "limitDepth": "Limit the search depth",
          "limitDepthError": "Enter a positive integer",
          "flowDirection": "Choose the flow direction",
          "flowDirectionError": "Select at least one",
          "inEdges": "IN-Edges",
          "outEdges": "OUT-Edges",
          "excludeEdges": "Exclude relation types",
          "compoundNeighbors": "Include the other entities of a compound",
          "launch": "Explore"
        }
      },
      "placeholder": {
        "error": "An error occured, cannot visualize data.",
        "noScenario": "No scenario. You can create a new scenario in the Scenario view."
      }
    },
    "iframe": {
      "scenario": {
        "results": {
          "card": {
            "title": "Results"
          },
          "iframe": {
            "title": "Supply Chain results"
          },
          "label": {
            "no": {
              "result": "No dashboards for this scenario."
            },
            "error": "An error occured during the scenario run",
            "running": "Scenario run in progress...",
            "dataInTransfer": "Scenario results transfer in progress..",
            "uninitialized": "The scenario has not been run yet"
          },
          "button": {
            "downloadLogs": "Download logs",
            "refresh": "Refresh (will then be disabled for 15 seconds)"
          }
        },
        "noscenario": {
          "title": "No scenario yet",
          "label": "You can create a scenario by clicking on the \"CREATE\" button"
        },
        "nodashboard": {
          "label": "There isn't any dashboard configured for this run template"
        },
        "unknownStatus": {
          "label": "This scenario has an unknown state, if the problem persists, please, contact your administrator"
        },
        "error": {
          "unknown": {
            "details": "Something went wrong when fetching PowerBI reports info",
            "label": "Unknown error"
          }
        }
      },
      "errorPlaceholder": {
        "title": "Unexpected error",
        "description": "Something went wrong when trying to display PowerBI dashboards. If the problem persists, please contact an administrator."
      }
    },
    "scenariomanager": {
      "treelist": {
        "node": {
          "dataset_one": "Dataset",
          "dataset_other": "Datasets",
          "status": {
            "label": "Run status:",
            "successful": "Successful",
            "running": "Running",
            "dataingestioninprogress": "Transferring results",
            "failed": "Failed",
            "created": "Created"
          },
          "action": {
            "delete": "Delete this scenario",
            "redirect": "Open in scenario view"
          },
          "text": {
            "search": "Filter..."
          }
        }
      },
      "toolbar": {
        "expandAll": "Expand all",
        "collapseAll": "Collapse all",
        "expandTree": "Expand tree"
      }
    },
    "tab": {
      "scenario": {
        "parameters": {
          "time_configuration": "Time configuration",
          "mass_action_lever": "Mass action lever",
          "optimization_configuration": "Optimization settings",
          "uncertainty_configuration": "Uncertainties settings",
          "behavior_configuration": "Model behavior configuration",
          "flow_management_policies": "Flow management policies"
        }
      }
    },
    "text": {
      "application": {
        "title": "Cosmo Tech Supply chain"
      },
      "contact": {
        "get": {
          "account": "Don't have an account?"
        }
      },
      "link": {
        "cosmotech": "Please contact Cosmo Tech"
      },
      "no": {
        "permission": "You don't have permission to view this page."
      }
    },
    "dialog": {
      "confirm": {
        "delete": {
          "button": {
            "cancel": "Cancel",
            "confirm": "Confirm"
          },
          "description": "This operation is irreversible. Dataset(s) will not be removed, but the scenario parameters will be lost. If this scenario has children, they will be moved to a new parent. The new parent will be the parent of the deleted scenario.",
          "title": "Remove scenario '{{scenarioName}}'?"
        }
      },
      "create": {
        "scenario": {
          "text": {
            "title": "Create new scenario"
          },
          "input": {
            "scenarioname": {
              "label": "Scenario name",
              "error": {
                "label": "Error",
                "empty": "Scenario name cannot be empty",
                "existing": "Scenario name already exists",
                "forbiddenchars": "Scenario name has to start with a letter or a digit, and can only contain letters, digits, spaces, underscores, hyphens and dots."
              }
            }
          },
          "dropdown": {
            "parentscenario": {
              "label": "Parent Scenario",
              "placeholder": "Select a parent Scenario"
            },
            "scenariotype": {
              "label": "Run Type",
              "placeholder": "Select a run Type"
            },
            "dataset": {
              "label": "Dataset",
              "placeholder": "Select a dataset"
            }
          },
          "checkbox": {
            "scenarioMaster": {
              "label": "Master"
            }
          },
          "button": {
            "create": "Create",
            "cancel": "Cancel"
          }
        }
      },
      "share": {
        "button": {
          "label": "Share",
          "tooltip": "Modify access"
        },
        "dialog": {
          "buttons": {
            "share": "Share",
            "cancel": "Cancel",
            "close": "Close",
            "done": "Done"
          },
          "title": "Share ",
          "readOnlyTitle": "Permissions for ",
          "select": {
            "addPeople": "Add people",
            "userSelected": "Selected user"
          },
          "editor": {
            "usersAccess": "Users access",
            "generalAccess": "General access",
            "removeAccess": "Remove specific access",
            "helperText": {
              "admin": "Anyone in this workspace is admin",
              "viewer": "Anyone in this workspace is viewer",
              "validator": "Anyone in this workspace is validator",
              "editor": "Anyone in this workspace is editor",
              "none": "Other users cannot view the scenario"
            }
          },
          "error": {
            "noAdmin": "The scenario must have at least one admin"
          },
          "add": {
            "deniedPermissions": "Not granted permissions",
            "grantedPermissions": "Granted permissions",
            "rolesTitle": "Roles",
            "rolesHelperText": "Select one role"
          }
        },
        "roles": {
          "admin": "Admin",
          "editor": "Editor",
          "none": "Restricted",
          "validator": "Validator",
          "viewer": "Viewer"
        },
        "permissions": {
          "create_children": "Create children",
          "write_security": "Edit permissions",
          "validate": "Change validation status",
          "write": "Edit parameters and rename scenario",
          "read": "View scenario and its results",
          "read_security": "See other people's permissions",
          "launch": "Launch scenario",
          "delete": "Delete scenario"
        }
      },
      "sessionTimeout": {
        "body": "You have been idle for too long. You will be automatically signed out in {{seconds}} seconds...",
        "cancel": "Stay connected",
        "logOut": "Sign out",
        "loggingOut": "Signing out...",
        "title": "Session timeout"
      }
    },
    "banner": {
      "unknownError": "Unknown error",
      "dataset": "Dataset hasn't been downloaded.",
      "logs": "Log file hasn't been downloaded.",
      "create": "Scenario hasn't been created.",
      "delete": "Scenario hasn't been deleted.",
      "rename": "Scenario hasn't been renamed",
      "updatePermissions": "Some scenario permissions have not been updated correctly.",
      "run": "A problem occurred during the scenario run.",
      "update": "A problem occurred during scenario update; your new parameters haven't been saved.",
      "incompleteRun": "A problem occurred during dataset update; the scenario is running but your new parameters haven't been saved.",
      "network": "Network problem, please check your internet connection",
      "resetStatusValidation": "A problem occurred during validation status reset.",
      "validateScenario": "A problem occurred during scenario validation.",
      "rejectScenario": "A problem occurred during scenario rejection.",
      "tooLongErrorMessage": "Detailed error message is too long to be displayed. To read it, please use the COPY button and paste it in your favorite text editor.",
      "button": {
        "dismiss": "Dismiss",
        "copy": {
          "label": "Copy",
          "copied": "Copied"
        }
      }
    }
  },
  "genericcomponent": {
    "dateInput": {
      "error": {
        "minDateMessage": "Minimum date is not respected",
        "maxDateMessage": "Maximum date is not respected",
        "invalidDateMessage": "Date is invalid"
      }
    },
    "uploadfile": {
      "button": {
        "browse": "Browse",
        "update": "Update"
      },
      "tooltip": {
        "isvalidfile": "Error: column name must be a string",
        "delete": "Delete file"
      },
      "mass_action_lever": {
        "download": "Download dataset from ADT",
        "generate": "Generate download link"
      },
      "noFileMessage": "None"
    },
    "loading": {
      "line": {
        "workspace": {
          "list": {
            "title": "Loading workspaces"
          },
          "current": {
            "title": "Loading workspace"
          }
        },
        "organization": {
          "current": {
            "title": "Loading organization"
          }
        },
        "solution": {
          "current": {
            "title": "Loading solution"
          }
        },
        "dataset": {
          "list": {
            "title": "Loading dataset list"
          }
        },
        "scenario": {
          "list": {
            "title": "Loading scenario list"
          },
          "current": {
            "title": "Setting current scenario"
          }
        },
        "powerbi": {
          "title": "Connecting to PowerBI"
        },
        "runtemplate": {
          "list": {
            "title": "Loading run types"
          }
        }
      }
    },
    "button": {
      "login": {
        "msal": {
          "title": "Sign in with Microsoft"
        }
      },
      "download": {
        "dataset": "Download dataset from ADT"
      }
    },
    "userinfo": {
      "button": {
        "change": {
          "language": "Change language"
        },
        "download": {
          "documentation": "Download documentation"
        },
        "logout": "Sign out"
      }
    },
    "helpmenu": {
      "title": "Help",
      "documentation": "Documentation",
      "support": "Contact support",
      "about": "About"
    },
    "switchtheme": {
      "light": "Switch to light",
      "dark": "Switch to dark"
    },
    "workspaceselector": {
      "homebutton": "Workspaces",
      "card": {
        "button": {
          "open": "Open"
        }
      },
      "placeholder": {
        "noworkspace": {
          "title": "No workspace available",
          "description": {
            "reason": "This could mean you don't have permission to access existing workspaces.",
            "contact": "If you think this is a mistake, please contact your administrator."
          }
        }
      },
      "error": {
        "title": "App initialization error",
        "message": "Could not find workspace with id {{workspaceId}} in workspaces list",
        "comment": "You have been redirected to the list of available workspaces"
      }
    },
    "dialog": {
      "scenario": {
        "parameters": {
          "button": {
            "cancel": "Cancel",
            "validate": "Discard",
            "launch": "Launch"
          },
          "title": "Discard current modifications ?",
          "body": "You will lose all your current changes made on the scenario parameters.",
          "confirmLaunchDialog": {
            "title": "Launch scenario ?",
            "body": "Running a scenario can take time. Any existing results for this scenario will be overwriten.",
            "checkbox": "Don't ask again"
          }
        }
      },
      "about": {
        "title": "Supply Chain version 4.1.1",
        "content": "Cosmo Tech Supply Chain digital twin solution",
        "button": {
          "close": "Close"
        }
      }
    },
    "text": {
      "scenario": {
        "parameters": {
          "placeholder": "No parameters to edit.",
          "title": "Scenario parameters",
          "time_configuration": {
            "date_boundaries_error": "The simulation start date must be before the simulation end date"
          },
          "simulation_granularity": {
            "minute": {
              "label": "Minute"
            },
            "hour": {
              "label": "Hour"
            },
            "day": {
              "label": "Day"
            },
            "week": {
              "label": "Week"
            },
            "month": {
              "label": "Month"
            },
            "quarter": {
              "label": "Quarter"
            },
            "year": {
              "label": "Year"
            }
          },
          "optimization_objective": {
            "ServiceLevelMaximization": {
              "label": "Service level maximization"
            },
            "ProfitMaximization": {
              "label": "Profit maximization"
            }
          },
          "uncertainties_probability_distribution": {
            "Gaussian": {
              "label": "Gaussian"
            },
            "Uniform": {
              "label": "Uniform"
            }
          },
          "transport_uncertainty_distribution": {
            "discreteuniform": {
              "label": "Discrete uniform"
            },
            "gamma": {
              "label": "Gamma"
            },
            "beta": {
              "label": "Beta"
            },
            "truncnorm": {
              "label": "Truncated Normal"
            },
            "truncexpon": {
              "label": "Truncated exponential"
            },
            "weibull": {
              "label": "Weibull"
            },
            "triangular": {
              "label": "Triangular"
            },
            "normal": {
              "label": "Normal"
            },
            "exponential": {
              "label": "Exponential"
            },
            "poisson": {
              "label": "Poisson"
            },
            "binomial": {
              "label": "Binomial"
            },
            "betabinom": {
              "label": "Beta binomial"
            },
            "geom": {
              "label": "Geometric"
            },
            "lognormal": {
              "label": "Lognormal"
            }
          },
          "sensitive_parameter": {
            "fixed_production_cost": {
              "label": "Fixed Production Cost"
            },
            "production_resource_opening_time": {
              "label": "Production Resource Opening Time"
            },
            "operating_performance": {
              "label": "Operating Performance"
            },
            "cycle_time": {
              "label": "Cycle Time"
            },
            "variable_production_cost": {
              "label": "Variable Production Cost"
            },
            "production_co2_unit_emissions": {
              "label": "Production CO2 Unit Emissions"
            },
            "production_minimum_order_quantity": {
              "label": "Production Minimum Order Quantity"
            },
            "production_multiple_order_quantity": {
              "label": "Production Multiple Order Quantity"
            },
            "production_plan": {
              "label": "Production Plan"
            },
            "initial_stock": {
              "label": "Initial Stock"
            },
            "purchasing_unit_cost": {
              "label": "Purchasing Unit Cost"
            },
            "unit_income": {
              "label": "Unit Income"
            },
            "storage_unit_cost": {
              "label": "Storage Unit Cost"
            },
            "order_point": {
              "label": "Order Point"
            },
            "order_quantities": {
              "label": "Order Quantities"
            },
            "order_up_to_levels": {
              "label": "Order Up To Levels"
            },
            "safety_quantities": {
              "label": "Safety Quantities"
            },
            "transport_unit_cost": {
              "label": "Transport Unit Cost"
            },
            "custom_fees": {
              "label": "Custom Fees"
            },
            "transport_duration": {
              "label": "Transport Duration"
            },
            "transport_co2_unit_emission": {
              "label": "Transport CO2 Unit Emission"
            },
            "transport_minimum_order_quantity": {
              "label": "Transport Minimum Order Quantity"
            },
            "transport_multiple_order_quantity": {
              "label": "Transport Multiple Order Quantity"
            }
          },
          "change": {
            "relative": {
              "label": "Relative",
              "tooltip": "variable = reference * (1 + variation)"
            },
            "absolute": {
              "label": "Absolute",
              "tooltip": "variable = reference + variation"
            },
            "replacement": {
              "label": "Replacement",
              "tooltip": "variable = variation"
            }
          },
          "intermediary_stock_dispatch": {
            "DispatchAll": {
              "label": "Dispatch all quantities downstream",
              "tooltip": "Default behavior"
            },
            "AllowRetention": {
              "label": "Can retain quantities",
              "tooltip": "For an optimization run type, it removes a constraint which forces having all intermediary stocks, with only transport operations downstream, empty at the end of each timestep. For a simulation run type, it enables to take into account demands on intermediary stocks in the stock dispatch policy, except for the \"Standard\" stock dispatch policy. (If there is no demand on intermediary stocks, then it will have no impact on the simulation.)"
            }
          },
          "stock_policy": {
            "None": {
              "label": "None",
              "tooltip": "No stock policy."
            },
            "OrderPointFixedQuantity": {
              "label": "Order point, fixed quantity",
              "tooltip": "Stock policy on order point and fixed quantity (r,q)."
            },
            "OrderPointVariableQuantity": {
              "label": "Order point, variable quantity",
              "tooltip": "Stock policy on order point aiming at replenishing the stock up to an user-defined level (s,S)."
            },
            "MakeToForecast": {
              "label": "Make to forecast",
              "tooltip": "Stock policy aiming at replenishing the stock to have enough quantities available to serve the forecasted demand and maintaining the defined safety stock."
            },
            "MakeToOrder": {
              "label": "Make to order",
              "tooltip": "Stock policy initiating supply orders based on orders to be served."
            },
            "FromDataset": {
              "label": "Mixed",
              "tooltip": "Enables to use different stock policies (to be defined for each stock in the dataset)."
            }
          },
          "sourcing_policy": {
            "Equidistribution": {
              "label": "Equidistribution",
              "tooltip": "The quantity ordered from the stock is evenly distributed among all the directly upstream production operations, respecting their maximum capacities. If a quantity to order remains, it is evenly distributed among all the directly upstream production operations and transports."
            },
            "SourcingProportions": {
              "label": "Sourcing proportions",
              "tooltip": "The quantity ordered from the stock is distributed among the directly upstream production operations and transports following the defined sourcing proportions, respecting their maximum capacities. If there is a remaining quantity to allocate due to a capacity constraint, then this quantity is again distributed among the directly upstream production operations and transports following the defined sourcing proportions."
            },
            "HighestStock": {
              "label": "The highest available stock first",
              "tooltip": "Consider the directly upstream production operations and transports one by one in a determined order following their available quantities with the highest first, in the event of a tie, the choice is based on the alphabetical order of their ID. Assign the quantity to order by allocating to each one a quantity equal to the minimum between its available quantity and the remaining quantity to order. If a quantity to order remains, it is assigned following an equidistribution."
            },
            "HighestPriority": {
              "label": "The highest priority first",
              "tooltip": "Consider the directly upstream production operations and transports one by one in a determined order following their priorities with the highest first, in the event of a tie, the choice is based on the alphabetical order of their ID. Assign the quantity to order by allocating to each one a quantity equal to the minimum between its available quantity and the remaining quantity to order. If a quantity to order remains, it is assigned to the first."
            },
            "FromDataset": {
              "label": "Mixed",
              "tooltip": "Enables to use different sourcing policies (to be defined for each stock in the dataset)."
            }
          },
          "stock_dispatch_policy": {
            "Equidistribution": {
              "label": "Equidistribution",
              "tooltip": "The available quantity in the stock is evenly distributed among the directly downstream production operations and transports which received an order for the current time step and the stock itself if stock retention is allowed and the stock has a demand or a backlog for the current time step."
            },
            "GreatestQuantity": {
              "label": "The greatest required quantity first",
              "tooltip": "Consider the directly downstream production operations and transports one by one in a determined order following their required quantities with the greatest first, in the event of a tie, the choice is based on the alphabetical order of their ID. Distribute the available quantity by allocating to each one a quantity equal to the minimum between its required quantity and the remaining available quantity."
            },
            "SmallestQuantity": {
              "label": "The smallest required quantity first",
              "tooltip": "Consider the directly downstream production operations and transports one by one in a determined order following their required quantities with the smallest first, in the event of a tie, the choice is based on the alphabetical order of their ID. Distribute the available quantity by allocating to each one a quantity equal to the minimum between its required quantity and the remaining available quantity."
            },
            "HighestPriority": {
              "label": "The highest priority first",
              "tooltip": "Consider the directly downstream production operations and transports one by one in a determined order following their priorities with the highest first, in the event of a tie, the choice is based on the alphabetical order of their ID. Distribute the available quantity by allocating to each one a quantity equal to the minimum between its required quantity and the remaining available quantity."
            },
            "None": {
              "label": "Standard",
              "tooltip": "The available quantity in the stock is evenly distributed among all the directly downstream production operations and transports (even if the quantity available is greater than the quantities ordered; therefore no quantity will be kept in stock, unless a downstream production operation reaches its capacity limit and therefore returns excess quantities to inventory)."
            },
            "FromDataset": {
              "label": "Mixed",
              "tooltip": "Enables to use different stock dispatch policies (to be defined for each stock in the dataset)."
            }
          },
          "production_policy": {
            "Equidistribution": {
              "label": "Equidistribution",
              "tooltip": "The available time of the production resource is evenly distributed among the contained production operations which received an order for the current time step."
            },
            "GreatestWorkload": {
              "label": "The greatest workload first",
              "tooltip": "Consider the contained production operations one by one in a determined order following their required times with the greatest first, in the event of a tie, the choice is based on the alphabetical order of their ID. Distribute the available time by allocating to each one a time equal to the minimum between its required time and the remaining available time."
            },
            "SmallestWorkload": {
              "label": "The smallest workload first",
              "tooltip": "Consider the contained production operations one by one in a determined order following their required times with the smallest first, in the event of a tie, the choice is based on the alphabetical order of their ID. Distribute the available time by allocating to each one a time equal to the minimum between its required time and the remaining available time."
            },
            "HighestPriority": {
              "label": "The highest priority first",
              "tooltip": "Consider the contained production operations one by one in a determined order following their priorities with the highest first, in the event of a tie, the choice is based on the alphabetical order of their ID. Distribute the available time by allocating to each one a time equal to the minimum between its required time and the remaining available time."
            },
            "None": {
              "label": "None",
              "tooltip": "No production policy."
            },
            "FromDataset": {
              "label": "Mixed",
              "tooltip": "Enables to use different production policies (to be defined for each production resource in the dataset)."
            }
          },
          "tabs": {
            "placeholder": "These parameters are confidential and you don't have permission to get access to them. If you think this is a mistake, please contact your application administrator."
          }
        }
      }
    },
    "table": {
      "button": {
        "clearErrors": "Clear",
        "fileImport": "Import file",
        "csvExport": "Export"
      },
      "labels": {
        "loading": "Loading...",
        "fileImportError": "File load failed.",
        "maxErrorsCount": "(only the top first {{maxCount}} results)",
        "errorsCount_one": "{{count}} error occurred:",
        "errorsCount_other": "{{count}} errors occurred:"
      },
      "export": {
        "labels": {
          "cancel": "Cancel",
          "export": "Export",
          "fileNameInputLabel": "Name",
          "fileTypeSelectLabel": "Type",
          "title": "Export file",
          "exportDescription": "Your file will be saved on your computer."
        }
      }
    }
  },
  "views": {
    "common": {
      "footer": {
        "text": {
          "companyname": "Cosmo Tech",
          "poweredby": "Powered by Cosmo Tech"
        }
      }
    },
    "signin": {
      "title": "Cosmo Tech Supply chain",
      "error": {
        "title": "Authentication failed"
      },
      "info": {
        "timeout": "For security reasons, your session has expired, due to inactivity."
      }
    },
    "accessdenied": {
      "title": "Access denied",
      "errormessage": "Either the resources do not exist or you don't have permission to access them.",
      "signouttimeout": "You will be automatically signed out in {{seconds}} seconds..."
    },
    "scenario": {
      "dropdown": {
        "scenario": {
          "label": "Scenario",
          "tooltip": {
            "disabled": "Please save or discard current modifications before selecting another scenario"
          }
        }
      },
      "text": {
        "scenariotype": "Run type"
      },
      "validation": {
        "reject": "Reject",
        "rejected": "Rejected",
        "validate": "Validate",
        "validated": "Validated",
        "disabledTooltip": "Please save or discard current modifications before changing the scenario validation status"
      },
      "redirectError": {
        "title": "Wrong URL",
        "detail": "The scenario with id {{id}} doesn't exist anymore.",
        "comment": "You have been redirected to default Scenario view."
      }
    },
    "runtemplate": {
      "title": {
        "Lever": "Predetermined production tactic simulation",
        "UncertaintyAnalysis": "Uncertainty analysis",
        "MILPOptimization": "Supply and production plan optimization",
        "ClientSpecificLever": "Predetermined production tactic simulation",
        "MILPOptimization_ParameterHandlerCloud": "Supply and production plan optimization",
        "SensitivityAnalysis": "Sensitivity analysis"
      }
    }
  },
  "layouts": {
    "tabs": {
      "scenario": {
        "tab": {
          "title": "SCENARIO VIEW"
        }
      },
      "instance": {
        "tab": {
          "title": "Flowchart"
        }
      },
      "scenariomanager": {
        "tab": {
          "title": "SCENARIO MANAGER"
        }
      },
      "dashboards": {
        "tab": {
          "title": "Dashboards"
        }
      }
    }
  }
}
